name: kaktwoos-rs-build

on: [push]

jobs:
  windows_build:
    name: kaktwoos-rs/release/windows
    runs-on: [windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v1
      - name: setup
        shell: msys2 {0}
        run: |
          pacman -S mingw-w64-x86_64-gcc --noconfirm
          pacman -S mingw-w64-x86_64-rust --noconfirm
      - name: build
        shell: msys2 {0}
        run: |
          cargo build --release
          mkdir ./bin
          cp ./target/release/kaktwoos_rs.dll ./bin/
          g++ -m64 -O3 -o ./bin/kaktwoos_rs.exe main.cc bin/kaktwoos_rs.dll -Wall -Wextra -Iboinc/ -Lboinc/lib/win -static-libgcc -static-libstdc++ -lboinc_api -lboinc -pthread -Wl,-dynamic-linker,/lib64/ld-linux-x86-64.so.2          
          ls -ls                                                                    
        env: 
          RUSTFLAGS: "-C target-cpu=broadwell -C opt-level=3"
          
      - uses: actions/upload-artifact@v2
        with:
          name: kaktwoos-rs-win
          path: bin\kaktwoos*
  linux_build:
    name: kaktwoos-rs/release/linux
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: |
          cargo build --release
          mkdir ./bin
          cp ./target/release/libkaktwoos_rs.so ./bin/
          g++ -m64 -O3 -o kaktwoos-rs main.cc bin/libkaktwoos_rs.so -Wall -Wextra -Iboinc/ -Lboinc/lib/lin -static-libgcc -static-libstdc++ -lboinc_api -lboinc -lboinc_opencl -pthread -Wl,-dynamic-linker,/lib64/ld-linux-x86-64.so.2          
          ls -ls
        env: 
          RUSTFLAGS: "-C target-cpu=broadwell -C opt-level=3"
         
      - uses: actions/upload-artifact@v2
        with:
          name: kaktwoos-rs-lin
          path: ./kaktwoos-rs
  arm64_build:
    name: kaktwoos-rs/release/arm64-linux
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: setup
        run: |
          sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu gcc g++ make m4 pkg-config build-essential autoconf libtool cmake
          rustup target add aarch64-unknown-linux-gnu
          cp config ~/.cargo/config
      - name: build
        run: |
          cargo build --target=aarch64-unknown-linux-gnu
          mkdir ./bin
          cp ./target/aarch64-unknown-linux-gnu/debug/libkaktwoos_rs.so ./bin/
          file bin/libkaktwoos_rs.so
          aarch64-linux-gnu-g++ -O3 -o kaktwoos-rs main.cc bin/libkaktwoos_rs.so -Wall -Wextra -Iboinc/ -Lboinc/lib/arm64 -static-libgcc -static-libstdc++ -lboinc_api -lboinc -pthread -Wl,-dynamic-linker,/lib64/ld-linux-x86-64.so.2          
          ls -ls
      - uses: actions/upload-artifact@v2
        with:
          name: kaktwoos-rs-lin-aarch64
          path: ./kaktwoos-rs*
